{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "AvatarClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "avatarOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createAvatar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uriPrefix",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uriSuffix",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052600060809081526007906200001a90826200017d565b506040805160208101909152600081526008906200003990826200017d565b50604080518082019091526005815264173539b7b760d91b60208201526009906200006590826200017d565b503480156200007357600080fd5b506040518060400160405280600681526020016520bb30ba30b960d11b8152506040518060400160405280600381526020016241564160e81b8152508160009081620000c091906200017d565b506001620000cf82826200017d565b50505062000249565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010357607f821691505b6020821081036200012457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200017857600081815260208120601f850160051c81016020861015620001535750805b601f850160051c820191505b8181101562000174578281556001016200015f565b5050505b505050565b81516001600160401b03811115620001995762000199620000d8565b620001b181620001aa8454620000ee565b846200012a565b602080601f831160018114620001e95760008415620001d05750858301515b600019600386901b1c1916600185901b17855562000174565b600085815260208120601f198616915b828110156200021a57888601518255948401946001909101908401620001f9565b5085821015620002395787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6118a380620002596000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806362b99ad4116100ad578063a22cb46511610071578063a22cb46514610256578063b88d4fde14610269578063c26854d21461027c578063c87b56dd1461029f578063e985e9c5146102b257600080fd5b806362b99ad41461020a5780636352211e146102125780636c0360eb1461022557806370a082311461022d57806395d89b411461024e57600080fd5b806323b872dd116100f457806323b872dd146101c15780633bb3a24d146101d457806342842e0e146101e75780635503a0e8146101fa5780635e5cd13a1461020257600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806312ecf0af146101ae575b600080fd5b61014461013f3660046112bf565b6102c5565b60405190151581526020015b60405180910390f35b610161610317565b604051610150919061132c565b61018161017c36600461133f565b6103a9565b6040516001600160a01b039091168152602001610150565b6101ac6101a7366004611374565b6103d0565b005b6101816101bc36600461133f565b6104ea565b6101ac6101cf36600461139e565b610507565b6101616101e236600461133f565b610538565b6101ac6101f536600461139e565b610623565b61016161063e565b6101ac6106cc565b61016161074c565b61018161022036600461133f565b610759565b6101616107b9565b61024061023b3660046113da565b6107c6565b604051908152602001610150565b61016161084c565b6101ac6102643660046113f5565b61085b565b6101ac610277366004611447565b61086a565b61014461028a3660046113da565b60066020526000908152604090205460ff1681565b6101616102ad36600461133f565b6108a2565b6101446102c0366004611523565b6108ff565b60006001600160e01b031982166380ac58cd60e01b14806102f657506001600160e01b03198216635b5e139f60e01b145b8061031157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461032690611556565b80601f016020809104026020016040519081016040528092919081815260200182805461035290611556565b801561039f5780601f106103745761010080835404028352916020019161039f565b820191906000526020600020905b81548152906001019060200180831161038257829003601f168201915b5050505050905090565b60006103b48261092d565b506000908152600460205260409020546001600160a01b031690565b60006103db82610759565b9050806001600160a01b0316836001600160a01b03160361044d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610469575061046981336108ff565b6104db5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610444565b6104e5838361098f565b505050565b6000818152600260205260408120546001600160a01b0316610311565b61051133826109fd565b61052d5760405162461bcd60e51b815260040161044490611590565b6104e5838383610a5c565b6000818152600260205260409020546060906001600160a01b03166105b75760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610444565b60006105ce60408051602081019091526000815290565b905060008151116105ee576040518060200160405280600081525061061c565b806105f884610bcd565b600960405160200161060c939291906115dd565b6040516020818303038152906040525b9392505050565b6104e58383836040518060200160405280600081525061086a565b6009805461064b90611556565b80601f016020809104026020016040519081016040528092919081815260200182805461067790611556565b80156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b505050505081565b3360009081526006602052604090205460ff16156107255760405162461bcd60e51b8152602060048201526016602482015275105d985d185c88185b1c9958591e4818db185a5b595960521b6044820152606401610444565b610730336001610cce565b336000908152600660205260409020805460ff19166001179055565b6008805461064b90611556565b6000818152600260205260408120546001600160a01b0316806103115760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610444565b6007805461064b90611556565b60006001600160a01b0382166108305760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610444565b506001600160a01b031660009081526003602052604090205490565b60606001805461032690611556565b610866338383610ce8565b5050565b61087433836109fd565b6108905760405162461bcd60e51b815260040161044490611590565b61089c84848484610db6565b50505050565b60606108ad8261092d565b60006108c460408051602081019091526000815290565b905060008151116108e4576040518060200160405280600081525061061c565b806108ee84610de9565b60405160200161060c9291906116a4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b031661098c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610444565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109c482610759565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a0983610759565b9050806001600160a01b0316846001600160a01b03161480610a305750610a3081856108ff565b80610a545750836001600160a01b0316610a49846103a9565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a6f82610759565b6001600160a01b031614610a955760405162461bcd60e51b8152600401610444906116d3565b6001600160a01b038216610af75760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610444565b610b048383836001610e7c565b826001600160a01b0316610b1782610759565b6001600160a01b031614610b3d5760405162461bcd60e51b8152600401610444906116d3565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b606081600003610bf45750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c1e5780610c088161172e565b9150610c179050600a8361175d565b9150610bf8565b60008167ffffffffffffffff811115610c3957610c39611431565b6040519080825280601f01601f191660200182016040528015610c63576020820181803683370190505b5090505b8415610a5457610c78600183611771565b9150610c85600a86611784565b610c90906030611798565b60f81b818381518110610ca557610ca56117ab565b60200101906001600160f81b031916908160001a905350610cc7600a8661175d565b9450610c67565b610866828260405180602001604052806000815250610f04565b816001600160a01b0316836001600160a01b031603610d495760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610444565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610dc1848484610a5c565b610dcd84848484610f37565b61089c5760405162461bcd60e51b8152600401610444906117c1565b60606000610df683611038565b600101905060008167ffffffffffffffff811115610e1657610e16611431565b6040519080825280601f01601f191660200182016040528015610e40576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e4a57509392505050565b600181111561089c576001600160a01b03841615610ec2576001600160a01b03841660009081526003602052604081208054839290610ebc908490611771565b90915550505b6001600160a01b0383161561089c576001600160a01b03831660009081526003602052604081208054839290610ef9908490611798565b909155505050505050565b610f0e8383611110565b610f1b6000848484610f37565b6104e55760405162461bcd60e51b8152600401610444906117c1565b60006001600160a01b0384163b1561102d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f7b903390899088908890600401611813565b6020604051808303816000875af1925050508015610fb6575060408051601f3d908101601f19168201909252610fb391810190611850565b60015b611013573d808015610fe4576040519150601f19603f3d011682016040523d82523d6000602084013e610fe9565b606091505b50805160000361100b5760405162461bcd60e51b8152600401610444906117c1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a54565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106110775772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106110a3576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106110c157662386f26fc10000830492506010015b6305f5e10083106110d9576305f5e100830492506008015b61271083106110ed57612710830492506004015b606483106110ff576064830492506002015b600a83106103115760010192915050565b6001600160a01b0382166111665760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610444565b6000818152600260205260409020546001600160a01b0316156111cb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610444565b6111d9600083836001610e7c565b6000818152600260205260409020546001600160a01b03161561123e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610444565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461098c57600080fd5b6000602082840312156112d157600080fd5b813561061c816112a9565b60005b838110156112f75781810151838201526020016112df565b50506000910152565b600081518084526113188160208601602086016112dc565b601f01601f19169290920160200192915050565b60208152600061061c6020830184611300565b60006020828403121561135157600080fd5b5035919050565b80356001600160a01b038116811461136f57600080fd5b919050565b6000806040838503121561138757600080fd5b61139083611358565b946020939093013593505050565b6000806000606084860312156113b357600080fd5b6113bc84611358565b92506113ca60208501611358565b9150604084013590509250925092565b6000602082840312156113ec57600080fd5b61061c82611358565b6000806040838503121561140857600080fd5b61141183611358565b91506020830135801515811461142657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561145d57600080fd5b61146685611358565b935061147460208601611358565b925060408501359150606085013567ffffffffffffffff8082111561149857600080fd5b818701915087601f8301126114ac57600080fd5b8135818111156114be576114be611431565b604051601f8201601f19908116603f011681019083821181831017156114e6576114e6611431565b816040528281528a60208487010111156114ff57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561153657600080fd5b61153f83611358565b915061154d60208401611358565b90509250929050565b600181811c9082168061156a57607f821691505b60208210810361158a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000845160206115f08285838a016112dc565b8551918401916116038184848a016112dc565b8554920191600090600181811c908083168061162057607f831692505b858310810361163d57634e487b7160e01b85526022600452602485fd5b808015611651576001811461166657611693565b60ff1985168852831515840288019550611693565b60008b81526020902060005b8581101561168b5781548a820152908401908801611672565b505083880195505b50939b9a5050505050505050505050565b600083516116b68184602088016112dc565b8351908301906116ca8183602088016112dc565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001820161174057611740611718565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261176c5761176c611747565b500490565b8181038181111561031157610311611718565b60008261179357611793611747565b500690565b8082018082111561031157610311611718565b634e487b7160e01b600052603260045260246000fd5b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061184690830184611300565b9695505050505050565b60006020828403121561186257600080fd5b815161061c816112a956fea2646970667358221220a077c70d842409b6b466a3704b4c1df1243c9dcbde8cb283b24e2f98fe204c4864736f6c63430008130033",
    "sourceMap": "285:26:30:-:0;170:1664;285:26;-1:-1:-1;170:1664:30;285:26;;;;;;;;;:::i;:::-;-1:-1:-1;317:28:30;;;;;;;;;-1:-1:-1;317:28:30;;;;;;;;:::i;:::-;-1:-1:-1;351:33:30;;;;;;;;;;;;-1:-1:-1;;;351:33:30;;;;;;;;;;:::i;:::-;;391:40;;;;;;;;;;1390:113:19;;;;;;;;;;;;;-1:-1:-1;;;1390:113:19;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:19;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:19;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;170:1664:30;;14:127:36;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:36;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:36;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:36;;;2580:26;2531:89;-1:-1:-1;;1335:1:36;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:36;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:36;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:36;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:36:o;:::-;170:1664:30;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806362b99ad4116100ad578063a22cb46511610071578063a22cb46514610256578063b88d4fde14610269578063c26854d21461027c578063c87b56dd1461029f578063e985e9c5146102b257600080fd5b806362b99ad41461020a5780636352211e146102125780636c0360eb1461022557806370a082311461022d57806395d89b411461024e57600080fd5b806323b872dd116100f457806323b872dd146101c15780633bb3a24d146101d457806342842e0e146101e75780635503a0e8146101fa5780635e5cd13a1461020257600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806312ecf0af146101ae575b600080fd5b61014461013f3660046112bf565b6102c5565b60405190151581526020015b60405180910390f35b610161610317565b604051610150919061132c565b61018161017c36600461133f565b6103a9565b6040516001600160a01b039091168152602001610150565b6101ac6101a7366004611374565b6103d0565b005b6101816101bc36600461133f565b6104ea565b6101ac6101cf36600461139e565b610507565b6101616101e236600461133f565b610538565b6101ac6101f536600461139e565b610623565b61016161063e565b6101ac6106cc565b61016161074c565b61018161022036600461133f565b610759565b6101616107b9565b61024061023b3660046113da565b6107c6565b604051908152602001610150565b61016161084c565b6101ac6102643660046113f5565b61085b565b6101ac610277366004611447565b61086a565b61014461028a3660046113da565b60066020526000908152604090205460ff1681565b6101616102ad36600461133f565b6108a2565b6101446102c0366004611523565b6108ff565b60006001600160e01b031982166380ac58cd60e01b14806102f657506001600160e01b03198216635b5e139f60e01b145b8061031157506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461032690611556565b80601f016020809104026020016040519081016040528092919081815260200182805461035290611556565b801561039f5780601f106103745761010080835404028352916020019161039f565b820191906000526020600020905b81548152906001019060200180831161038257829003601f168201915b5050505050905090565b60006103b48261092d565b506000908152600460205260409020546001600160a01b031690565b60006103db82610759565b9050806001600160a01b0316836001600160a01b03160361044d5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b0382161480610469575061046981336108ff565b6104db5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610444565b6104e5838361098f565b505050565b6000818152600260205260408120546001600160a01b0316610311565b61051133826109fd565b61052d5760405162461bcd60e51b815260040161044490611590565b6104e5838383610a5c565b6000818152600260205260409020546060906001600160a01b03166105b75760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610444565b60006105ce60408051602081019091526000815290565b905060008151116105ee576040518060200160405280600081525061061c565b806105f884610bcd565b600960405160200161060c939291906115dd565b6040516020818303038152906040525b9392505050565b6104e58383836040518060200160405280600081525061086a565b6009805461064b90611556565b80601f016020809104026020016040519081016040528092919081815260200182805461067790611556565b80156106c45780601f10610699576101008083540402835291602001916106c4565b820191906000526020600020905b8154815290600101906020018083116106a757829003601f168201915b505050505081565b3360009081526006602052604090205460ff16156107255760405162461bcd60e51b8152602060048201526016602482015275105d985d185c88185b1c9958591e4818db185a5b595960521b6044820152606401610444565b610730336001610cce565b336000908152600660205260409020805460ff19166001179055565b6008805461064b90611556565b6000818152600260205260408120546001600160a01b0316806103115760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610444565b6007805461064b90611556565b60006001600160a01b0382166108305760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610444565b506001600160a01b031660009081526003602052604090205490565b60606001805461032690611556565b610866338383610ce8565b5050565b61087433836109fd565b6108905760405162461bcd60e51b815260040161044490611590565b61089c84848484610db6565b50505050565b60606108ad8261092d565b60006108c460408051602081019091526000815290565b905060008151116108e4576040518060200160405280600081525061061c565b806108ee84610de9565b60405160200161060c9291906116a4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000818152600260205260409020546001600160a01b031661098c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610444565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109c482610759565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a0983610759565b9050806001600160a01b0316846001600160a01b03161480610a305750610a3081856108ff565b80610a545750836001600160a01b0316610a49846103a9565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a6f82610759565b6001600160a01b031614610a955760405162461bcd60e51b8152600401610444906116d3565b6001600160a01b038216610af75760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610444565b610b048383836001610e7c565b826001600160a01b0316610b1782610759565b6001600160a01b031614610b3d5760405162461bcd60e51b8152600401610444906116d3565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b606081600003610bf45750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610c1e5780610c088161172e565b9150610c179050600a8361175d565b9150610bf8565b60008167ffffffffffffffff811115610c3957610c39611431565b6040519080825280601f01601f191660200182016040528015610c63576020820181803683370190505b5090505b8415610a5457610c78600183611771565b9150610c85600a86611784565b610c90906030611798565b60f81b818381518110610ca557610ca56117ab565b60200101906001600160f81b031916908160001a905350610cc7600a8661175d565b9450610c67565b610866828260405180602001604052806000815250610f04565b816001600160a01b0316836001600160a01b031603610d495760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610444565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610dc1848484610a5c565b610dcd84848484610f37565b61089c5760405162461bcd60e51b8152600401610444906117c1565b60606000610df683611038565b600101905060008167ffffffffffffffff811115610e1657610e16611431565b6040519080825280601f01601f191660200182016040528015610e40576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610e4a57509392505050565b600181111561089c576001600160a01b03841615610ec2576001600160a01b03841660009081526003602052604081208054839290610ebc908490611771565b90915550505b6001600160a01b0383161561089c576001600160a01b03831660009081526003602052604081208054839290610ef9908490611798565b909155505050505050565b610f0e8383611110565b610f1b6000848484610f37565b6104e55760405162461bcd60e51b8152600401610444906117c1565b60006001600160a01b0384163b1561102d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f7b903390899088908890600401611813565b6020604051808303816000875af1925050508015610fb6575060408051601f3d908101601f19168201909252610fb391810190611850565b60015b611013573d808015610fe4576040519150601f19603f3d011682016040523d82523d6000602084013e610fe9565b606091505b50805160000361100b5760405162461bcd60e51b8152600401610444906117c1565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a54565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106110775772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106110a3576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106110c157662386f26fc10000830492506010015b6305f5e10083106110d9576305f5e100830492506008015b61271083106110ed57612710830492506004015b606483106110ff576064830492506002015b600a83106103115760010192915050565b6001600160a01b0382166111665760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610444565b6000818152600260205260409020546001600160a01b0316156111cb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610444565b6111d9600083836001610e7c565b6000818152600260205260409020546001600160a01b03161561123e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610444565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461098c57600080fd5b6000602082840312156112d157600080fd5b813561061c816112a9565b60005b838110156112f75781810151838201526020016112df565b50506000910152565b600081518084526113188160208601602086016112dc565b601f01601f19169290920160200192915050565b60208152600061061c6020830184611300565b60006020828403121561135157600080fd5b5035919050565b80356001600160a01b038116811461136f57600080fd5b919050565b6000806040838503121561138757600080fd5b61139083611358565b946020939093013593505050565b6000806000606084860312156113b357600080fd5b6113bc84611358565b92506113ca60208501611358565b9150604084013590509250925092565b6000602082840312156113ec57600080fd5b61061c82611358565b6000806040838503121561140857600080fd5b61141183611358565b91506020830135801515811461142657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561145d57600080fd5b61146685611358565b935061147460208601611358565b925060408501359150606085013567ffffffffffffffff8082111561149857600080fd5b818701915087601f8301126114ac57600080fd5b8135818111156114be576114be611431565b604051601f8201601f19908116603f011681019083821181831017156114e6576114e6611431565b816040528281528a60208487010111156114ff57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561153657600080fd5b61153f83611358565b915061154d60208401611358565b90509250929050565b600181811c9082168061156a57607f821691505b60208210810361158a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000845160206115f08285838a016112dc565b8551918401916116038184848a016112dc565b8554920191600090600181811c908083168061162057607f831692505b858310810361163d57634e487b7160e01b85526022600452602485fd5b808015611651576001811461166657611693565b60ff1985168852831515840288019550611693565b60008b81526020902060005b8581101561168b5781548a820152908401908801611672565b505083880195505b50939b9a5050505050505050505050565b600083516116b68184602088016112dc565b8351908301906116ca8183602088016112dc565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001820161174057611740611718565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261176c5761176c611747565b500490565b8181038181111561031157610311611718565b60008261179357611793611747565b500690565b8082018082111561031157610311611718565b634e487b7160e01b600052603260045260246000fd5b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061184690830184611300565b9695505050505050565b60006020828403121561186257600080fd5b815161061c816112a956fea2646970667358221220a077c70d842409b6b466a3704b4c1df1243c9dcbde8cb283b24e2f98fe204c4864736f6c63430008130033",
    "sourceMap": "170:1664:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:19;;;;;;:::i;:::-;;:::i;:::-;;;565:14:36;;558:22;540:41;;528:2;513:18;1570:300:19;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:36;;;1679:51;;1667:2;1652:18;3935:167:19;1533:203:36;3468:406:19;;;;;;:::i;:::-;;:::i;:::-;;632:133:30;;;;;;:::i;:::-;;:::i;4612:326:19:-;;;;;;:::i;:::-;;:::i;1250:582:30:-;;;;;;:::i;:::-;;:::i;5004:179:19:-;;;;;;:::i;:::-;;:::i;351:33:30:-;;;:::i;437:189::-;;;:::i;317:28::-;;;:::i;2190:219:19:-;;;;;;:::i;:::-;;:::i;285:26:30:-;;;:::i;1929:204:19:-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:36;;;2836:2;2821:18;1929:204:19;2702:177:36;2633:102:19;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5249:314::-;;;;;;:::i;:::-;;:::i;234:45:30:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2801:276:19;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;;:::i;1570:300::-;1672:4;-1:-1:-1;;;;;;1707:40:19;;-1:-1:-1;;;1707:40:19;;:104;;-1:-1:-1;;;;;;;1763:48:19;;-1:-1:-1;;;1763:48:19;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:26;;;1827:36:19;1688:175;1570:300;-1:-1:-1;;1570:300:19:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:19;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:19;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:19;:2;-1:-1:-1;;;;;3605:11:19;;3597:57;;;;-1:-1:-1;;;3597:57:19;;5363:2:36;3597:57:19;;;5345:21:36;5402:2;5382:18;;;5375:30;5441:34;5421:18;;;5414:62;-1:-1:-1;;;5492:18:36;;;5485:31;5533:19;;3597:57:19;;;;;;;;;719:10:24;-1:-1:-1;;;;;3686:21:19;;;;:62;;-1:-1:-1;3711:37:19;3728:5;719:10:24;4388:162:19;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:19;;5765:2:36;3665:170:19;;;5747:21:36;5804:2;5784:18;;;5777:30;5843:34;5823:18;;;5816:62;5914:31;5894:18;;;5887:59;5963:19;;3665:170:19;5563:425:36;3665:170:19;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;632:133:30:-;714:7;6930:16:19;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:19;740:18:30;6838:115:19;4612:326;4801:41;719:10:24;4834:7:19;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:19;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;1250:582:30:-;7321:4:19;6930:16;;;:7;:16;;;;;;1332:13:30;;-1:-1:-1;;;;;6930:16:19;1357:111:30;;;;-1:-1:-1;;;1357:111:30;;6609:2:36;1357:111:30;;;6591:21:36;6648:2;6628:18;;;6621:30;6687:34;6667:18;;;6660:62;-1:-1:-1;;;6738:18:36;;;6731:45;6793:19;;1357:111:30;6407:411:36;1357:111:30;1479:28;1510:10;3395:9:19;;;;;;;;;-1:-1:-1;3395:9:19;;;3319:92;1510:10:30;1479:41;;1580:1;1555:14;1549:28;:32;:276;;;;;;;;;;;;;;;;;1670:14;1710:19;:8;:17;:19::i;:::-;1755:9;1628:158;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1549:276;1530:295;1250:582;-1:-1:-1;;;1250:582:30:o;5004:179:19:-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;351:33:30:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;437:189::-;719:10:24;487:27:30;;;;:13;:27;;;;;;;;486:28;478:63;;;;-1:-1:-1;;;478:63:30;;8740:2:36;478:63:30;;;8722:21:36;8779:2;8759:18;;;8752:30;-1:-1:-1;;;8798:18:36;;;8791:52;8860:18;;478:63:30;8538:346:36;478:63:30;551:24;561:10;573:1;551:9;:24::i;:::-;719:10:24;585:27:30;;;;:13;:27;;;;;:34;;-1:-1:-1;;585:34:30;615:4;585:34;;;437:189::o;317:28::-;;;;;;;:::i;2190:219:19:-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:19;;2324:56;;;;-1:-1:-1;;;2324:56:19;;9091:2:36;2324:56:19;;;9073:21:36;9130:2;9110:18;;;9103:30;-1:-1:-1;;;9149:18:36;;;9142:54;9213:18;;2324:56:19;8889:348:36;285:26:30;;;;;;;:::i;1929:204:19:-;2001:7;-1:-1:-1;;;;;2028:19:19;;2020:73;;;;-1:-1:-1;;;2020:73:19;;9444:2:36;2020:73:19;;;9426:21:36;9483:2;9463:18;;;9456:30;9522:34;9502:18;;;9495:62;-1:-1:-1;;;9573:18:36;;;9566:39;9622:19;;2020:73:19;9242:405:36;2020:73:19;-1:-1:-1;;;;;;2110:16:19;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:24;4296:8:19;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;719:10:24;5450:7:19;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:19;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:19;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;4388:162::-;-1:-1:-1;;;;;4508:25:19;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162::o;13466:133::-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:19;13539:53;;;;-1:-1:-1;;;13539:53:19;;9091:2:36;13539:53:19;;;9073:21:36;9130:2;9110:18;;;9103:30;-1:-1:-1;;;9149:18:36;;;9142:54;9213:18;;13539:53:19;8889:348:36;13539:53:19;13466:133;:::o;12768:171::-;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:19;-1:-1:-1;;;;;12842:29:19;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:19;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:19;:7;-1:-1:-1;;;;;7706:16:19;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:19;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:19;;7706:87;7698:96;7540:261;-1:-1:-1;;;;7540:261:19:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:19;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:19;;11542:81;;;;-1:-1:-1;;;11542:81:19;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:19;;11633:65;;;;-1:-1:-1;;;11633:65:19;;10761:2:36;11633:65:19;;;10743:21:36;10800:2;10780:18;;;10773:30;10839:34;10819:18;;;10812:62;-1:-1:-1;;;10890:18:36;;;10883:34;10934:19;;11633:65:19;10559:400:36;11633:65:19;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;-1:-1:-1;;;;;11851:31:19;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:19;;11843:81;;;;-1:-1:-1;;;11843:81:19;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:19;;;;;;-1:-1:-1;;;;;12461:15:19;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:19;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;328:703:31:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:31;;;;;;;;;;;;-1:-1:-1;;;627:10:31;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:31;;-1:-1:-1;773:2:31;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:31;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:31;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:31;;;;;;;;-1:-1:-1;972:11:31;981:2;972:11;;:::i;:::-;;;844:150;;8131:108:19;8206:26;8216:2;8220:7;8206:26;;;;;;;;;;;;:9;:26::i;13075:307::-;13225:8;-1:-1:-1;;;;;13216:17:19;:5;-1:-1:-1;;;;;13216:17:19;;13208:55;;;;-1:-1:-1;;;13208:55:19;;12207:2:36;13208:55:19;;;12189:21:36;12246:2;12226:18;;;12219:30;12285:27;12265:18;;;12258:55;12330:18;;13208:55:19;12005:349:36;13208:55:19;-1:-1:-1;;;;;13273:25:19;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:19;;;;;;;;;;13334:41;;540::36;;;13334::19;;513:18:36;13334:41:19;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:19;;;;;;;:::i;415:696:25:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:25;-1:-1:-1;572:41:25;-1:-1:-1;733:28:25;;;749:2;733:28;788:280;-1:-1:-1;;819:5:25;-1:-1:-1;;;953:2:25;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:25;788:280;1032:21;-1:-1:-1;1088:6:25;415:696;-1:-1:-1;;;415:696:25:o;15698:396:19:-;15882:1;15870:9;:13;15866:222;;;-1:-1:-1;;;;;15903:18:19;;;15899:85;;-1:-1:-1;;;;;15941:15:19;;;;;;:9;:15;;;;;:28;;15960:9;;15941:15;:28;;15960:9;;15941:28;:::i;:::-;;;;-1:-1:-1;;15899:85:19;-1:-1:-1;;;;;16001:16:19;;;15997:81;;-1:-1:-1;;;;;16037:13:19;;;;;;:9;:13;;;;;:26;;16054:9;;16037:13;:26;;16054:9;;16037:26;:::i;:::-;;;;-1:-1:-1;;15698:396:19;;;;:::o;8460:309::-;8584:18;8590:2;8594:7;8584:5;:18::i;:::-;8633:53;8664:1;8668:2;8672:7;8681:4;8633:22;:53::i;:::-;8612:150;;;;-1:-1:-1;;;8612:150:19;;;;;;;:::i;14151:831::-;14300:4;-1:-1:-1;;;;;14320:13:19;;1465:19:23;:23;14316:660:19;;14355:71;;-1:-1:-1;;;14355:71:19;;-1:-1:-1;;;;;14355:36:19;;;;;:71;;719:10:24;;14406:4:19;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:19;;;;;;;;-1:-1:-1;;14355:71:19;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:19;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:19;-1:-1:-1;;;14476:51:19;;-1:-1:-1;14469:58:19;;14316:660;-1:-1:-1;14961:4:19;14151:831;;;;;;:::o;9889:890:28:-;9942:7;;-1:-1:-1;;;10017:15:28;;10013:99;;-1:-1:-1;;;10052:15:28;;;-1:-1:-1;10095:2:28;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:28;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:28;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:28;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:28;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:28;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:28:o;9091:920:19:-;-1:-1:-1;;;;;9170:16:19;;9162:61;;;;-1:-1:-1;;;9162:61:19;;13728:2:36;9162:61:19;;;13710:21:36;;;13747:18;;;13740:30;13806:34;13786:18;;;13779:62;13858:18;;9162:61:19;13526:356:36;9162:61:19;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:19;7344:31;9233:58;;;;-1:-1:-1;;;9233:58:19;;14089:2:36;9233:58:19;;;14071:21:36;14128:2;14108:18;;;14101:30;14167;14147:18;;;14140:58;14215:18;;9233:58:19;13887:352:36;9233:58:19;9302:48;9331:1;9335:2;9339:7;9348:1;9302:20;:48::i;:::-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:19;7344:31;9437:58;;;;-1:-1:-1;;;9437:58:19;;14089:2:36;9437:58:19;;;14071:21:36;14128:2;14108:18;;;14101:30;14167;14147:18;;;14140:58;14215:18;;9437:58:19;13887:352:36;9437:58:19;-1:-1:-1;;;;;9837:13:19;;;;;;:9;:13;;;;;;;;:18;;9854:1;9837:18;;;9876:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9876:21:19;;;;;9913:33;9884:7;;9837:13;;9913:33;;9837:13;;9913:33;4169:153;;:::o;14:131:36:-;-1:-1:-1;;;;;;88:32:36;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:36;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:36;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:36:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:36;;1348:180;-1:-1:-1;1348:180:36:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:36;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:36:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:36;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:260::-;4579:6;4587;4640:2;4628:9;4619:7;4615:23;4611:32;4608:52;;;4656:1;4653;4646:12;4608:52;4679:29;4698:9;4679:29;:::i;:::-;4669:39;;4727:38;4761:2;4750:9;4746:18;4727:38;:::i;:::-;4717:48;;4511:260;;;;;:::o;4776:380::-;4855:1;4851:12;;;;4898;;;4919:61;;4973:4;4965:6;4961:17;4951:27;;4919:61;5026:2;5018:6;5015:14;4995:18;4992:38;4989:161;;5072:10;5067:3;5063:20;5060:1;5053:31;5107:4;5104:1;5097:15;5135:4;5132:1;5125:15;4989:161;;4776:380;;;:::o;5993:409::-;6195:2;6177:21;;;6234:2;6214:18;;;6207:30;6273:34;6268:2;6253:18;;6246:62;-1:-1:-1;;;6339:2:36;6324:18;;6317:43;6392:3;6377:19;;5993:409::o;6949:1584::-;7173:3;7211:6;7205:13;7237:4;7250:64;7307:6;7302:3;7297:2;7289:6;7285:15;7250:64;:::i;:::-;7377:13;;7336:16;;;;7399:68;7377:13;7336:16;7434:15;;;7399:68;:::i;:::-;7556:13;;7489:20;;;7529:1;;7616;7638:18;;;;7691;;;;7718:93;;7796:4;7786:8;7782:19;7770:31;;7718:93;7859:2;7849:8;7846:16;7826:18;7823:40;7820:167;;-1:-1:-1;;;7886:33:36;;7942:4;7939:1;7932:15;7972:4;7893:3;7960:17;7820:167;8003:18;8030:141;;;;8185:1;8180:328;;;;7996:512;;8030:141;-1:-1:-1;;8065:24:36;;8051:39;;8142:16;;8135:24;8121:39;;8110:51;;;-1:-1:-1;8030:141:36;;8180:328;6896:1;6889:14;;;6933:4;6920:18;;8275:1;8289:169;8303:8;8300:1;8297:15;8289:169;;;8385:14;;8370:13;;;8363:37;8428:16;;;;8320:10;;8289:169;;;8293:3;;8489:8;8482:5;8478:20;8471:27;;7996:512;-1:-1:-1;8524:3:36;;6949:1584;-1:-1:-1;;;;;;;;;;;6949:1584:36:o;9652:496::-;9831:3;9869:6;9863:13;9885:66;9944:6;9939:3;9932:4;9924:6;9920:17;9885:66;:::i;:::-;10014:13;;9973:16;;;;10036:70;10014:13;9973:16;10083:4;10071:17;;10036:70;:::i;:::-;10122:20;;9652:496;-1:-1:-1;;;;9652:496:36:o;10153:401::-;10355:2;10337:21;;;10394:2;10374:18;;;10367:30;10433:34;10428:2;10413:18;;10406:62;-1:-1:-1;;;10499:2:36;10484:18;;10477:35;10544:3;10529:19;;10153:401::o;10964:127::-;11025:10;11020:3;11016:20;11013:1;11006:31;11056:4;11053:1;11046:15;11080:4;11077:1;11070:15;11096:135;11135:3;11156:17;;;11153:43;;11176:18;;:::i;:::-;-1:-1:-1;11223:1:36;11212:13;;11096:135::o;11236:127::-;11297:10;11292:3;11288:20;11285:1;11278:31;11328:4;11325:1;11318:15;11352:4;11349:1;11342:15;11368:120;11408:1;11434;11424:35;;11439:18;;:::i;:::-;-1:-1:-1;11473:9:36;;11368:120::o;11493:128::-;11560:9;;;11581:11;;;11578:37;;;11595:18;;:::i;11626:112::-;11658:1;11684;11674:35;;11689:18;;:::i;:::-;-1:-1:-1;11723:9:36;;11626:112::o;11743:125::-;11808:9;;;11829:10;;;11826:36;;;11842:18;;:::i;11873:127::-;11934:10;11929:3;11925:20;11922:1;11915:31;11965:4;11962:1;11955:15;11989:4;11986:1;11979:15;12359:414;12561:2;12543:21;;;12600:2;12580:18;;;12573:30;12639:34;12634:2;12619:18;;12612:62;-1:-1:-1;;;12705:2:36;12690:18;;12683:48;12763:3;12748:19;;12359:414::o;12778:489::-;-1:-1:-1;;;;;13047:15:36;;;13029:34;;13099:15;;13094:2;13079:18;;13072:43;13146:2;13131:18;;13124:34;;;13194:3;13189:2;13174:18;;13167:31;;;12972:4;;13215:46;;13241:19;;13233:6;13215:46;:::i;:::-;13207:54;12778:489;-1:-1:-1;;;;;;12778:489:36:o;13272:249::-;13341:6;13394:2;13382:9;13373:7;13369:23;13365:32;13362:52;;;13410:1;13407;13400:12;13362:52;13442:9;13436:16;13461:30;13485:5;13461:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "AvatarClaimed(address)": "c26854d2",
    "approve(address,uint256)": "095ea7b3",
    "avatarOwner(uint256)": "12ecf0af",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "createAvatar()": "5e5cd13a",
    "getApproved(uint256)": "081812fc",
    "getTokenURI(uint256)": "3bb3a24d",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "uriPrefix()": "62b99ad4",
    "uriSuffix()": "5503a0e8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"AvatarClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"avatarOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createAvatar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uriPrefix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uriSuffix\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Avatar.sol\":\"Avatar\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c\",\"dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"src/Avatar.sol\":{\"keccak256\":\"0x2f0c19f60b2f9d6829c4f060c8cb19134a787ea9316cdd09c51ff8565b36b881\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcc05e56c0f683866507db184d91646da19c5a7f9c712a38e37d8d693c3bfc93\",\"dweb:/ipfs/QmY92Pobzk2iHRaScTc3tPVx5BaRMQ6u6Ljck6UXdDhubu\"]},\"src/Strings.sol\":{\"keccak256\":\"0xd6678522fe63f27093c4d8a62175b3c4769211db9a234e9d783544b4e18b3436\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b5bd0aae74a5bcb976fd663fb534fd81675b9d3151817c3b8541ebc5b40d2bf\",\"dweb:/ipfs/QmQGXcc2xPHgCpnhc8ggRZV7j16PJjP5XxN8G3Dj9FLdWN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "AvatarClaimed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "avatarOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAvatar"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uriPrefix",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uriSuffix",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Avatar.sol": "Avatar"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0xd89f3585b211fc9e3408384a4c4efdc3a93b2f877a3821046fa01c219d35be1b",
        "urls": [
          "bzz-raw://5ea15ef7c8980240ccd46df13809d163f749bc0a01d8bced1875660d4872da1c",
          "dweb:/ipfs/QmbDfAT9VeCSG4cnPd6tjDMp8ED85dLHbWyMyv7wbmL4CH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "src/Avatar.sol": {
        "keccak256": "0x2f0c19f60b2f9d6829c4f060c8cb19134a787ea9316cdd09c51ff8565b36b881",
        "urls": [
          "bzz-raw://fcc05e56c0f683866507db184d91646da19c5a7f9c712a38e37d8d693c3bfc93",
          "dweb:/ipfs/QmY92Pobzk2iHRaScTc3tPVx5BaRMQ6u6Ljck6UXdDhubu"
        ],
        "license": "MIT"
      },
      "src/Strings.sol": {
        "keccak256": "0xd6678522fe63f27093c4d8a62175b3c4769211db9a234e9d783544b4e18b3436",
        "urls": [
          "bzz-raw://4b5bd0aae74a5bcb976fd663fb534fd81675b9d3151817c3b8541ebc5b40d2bf",
          "dweb:/ipfs/QmQGXcc2xPHgCpnhc8ggRZV7j16PJjP5XxN8G3Dj9FLdWN"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Avatar.sol",
    "id": 30112,
    "exportedSymbols": {
      "Avatar": [
        30111
      ],
      "ERC721": [
        28322
      ],
      "Strings": [
        30314
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1803:30",
    "nodes": [
      {
        "id": 29952,
        "nodeType": "PragmaDirective",
        "src": "32:24:30",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 29954,
        "nodeType": "ImportDirective",
        "src": "58:71:30",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30112,
        "sourceUnit": 28323,
        "symbolAliases": [
          {
            "foreign": {
              "id": 29953,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28322,
              "src": "66:6:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 29956,
        "nodeType": "ImportDirective",
        "src": "130:38:30",
        "nodes": [],
        "absolutePath": "src/Strings.sol",
        "file": "./Strings.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30112,
        "sourceUnit": 30315,
        "symbolAliases": [
          {
            "foreign": {
              "id": 29955,
              "name": "Strings",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30314,
              "src": "138:7:30",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30111,
        "nodeType": "ContractDefinition",
        "src": "170:1664:30",
        "nodes": [
          {
            "id": 29961,
            "nodeType": "UsingForDirective",
            "src": "202:26:30",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 29959,
              "name": "Strings",
              "nameLocations": [
                "208:7:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30314,
              "src": "208:7:30"
            },
            "typeName": {
              "id": 29960,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "220:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 29965,
            "nodeType": "VariableDeclaration",
            "src": "234:45:30",
            "nodes": [],
            "constant": false,
            "functionSelector": "c26854d2",
            "mutability": "mutable",
            "name": "AvatarClaimed",
            "nameLocation": "266:13:30",
            "scope": 30111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 29964,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 29962,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "242:7:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "234:24:30",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 29963,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "253:4:30",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 29968,
            "nodeType": "VariableDeclaration",
            "src": "285:26:30",
            "nodes": [],
            "constant": false,
            "functionSelector": "6c0360eb",
            "mutability": "mutable",
            "name": "baseURI",
            "nameLocation": "299:7:30",
            "scope": 30111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 29966,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "285:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 29967,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "309:2:30",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "id": 29971,
            "nodeType": "VariableDeclaration",
            "src": "317:28:30",
            "nodes": [],
            "constant": false,
            "functionSelector": "62b99ad4",
            "mutability": "mutable",
            "name": "uriPrefix",
            "nameLocation": "331:9:30",
            "scope": 30111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 29969,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "317:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "",
              "id": 29970,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "343:2:30",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                "typeString": "literal_string \"\""
              },
              "value": ""
            },
            "visibility": "public"
          },
          {
            "id": 29974,
            "nodeType": "VariableDeclaration",
            "src": "351:33:30",
            "nodes": [],
            "constant": false,
            "functionSelector": "5503a0e8",
            "mutability": "mutable",
            "name": "uriSuffix",
            "nameLocation": "365:9:30",
            "scope": 30111,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 29972,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "351:6:30",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "2e6a736f6e",
              "id": 29973,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "377:7:30",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972",
                "typeString": "literal_string \".json\""
              },
              "value": ".json"
            },
            "visibility": "public"
          },
          {
            "id": 29982,
            "nodeType": "FunctionDefinition",
            "src": "391:40:30",
            "nodes": [],
            "body": {
              "id": 29981,
              "nodeType": "Block",
              "src": "429:2:30",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "417661746172",
                    "id": 29977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "412:8:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_29a36bb22f3c260ddca59a40dffde48863da1d6fba3d1f55dedde5c8e1942577",
                      "typeString": "literal_string \"Avatar\""
                    },
                    "value": "Avatar"
                  },
                  {
                    "hexValue": "415641",
                    "id": 29978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "422:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8a13e5fdd0d06358cbbffa07ed2478116e9999ff29db91f9d674a0072c803df4",
                      "typeString": "literal_string \"AVA\""
                    },
                    "value": "AVA"
                  }
                ],
                "id": 29979,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 29976,
                  "name": "ERC721",
                  "nameLocations": [
                    "405:6:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28322,
                  "src": "405:6:30"
                },
                "nodeType": "ModifierInvocation",
                "src": "405:23:30"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 29975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "402:2:30"
            },
            "returnParameters": {
              "id": 29980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:0:30"
            },
            "scope": 30111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30008,
            "nodeType": "FunctionDefinition",
            "src": "437:189:30",
            "nodes": [],
            "body": {
              "id": 30007,
              "nodeType": "Block",
              "src": "468:158:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "486:28:30",
                        "subExpression": {
                          "baseExpression": {
                            "id": 29986,
                            "name": "AvatarClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29965,
                            "src": "487:13:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 29989,
                          "indexExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 29987,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28825,
                              "src": "501:10:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 29988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "501:12:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "487:27:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41766174617220616c726561647920636c61696d6564",
                        "id": 29991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "516:24:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07197a27997739fa60c7d23df4d47a90a25b80c852c777ef1bfdbbdb74d36bee",
                          "typeString": "literal_string \"Avatar already claimed\""
                        },
                        "value": "Avatar already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07197a27997739fa60c7d23df4d47a90a25b80c852c777ef1bfdbbdb74d36bee",
                          "typeString": "literal_string \"Avatar already claimed\""
                        }
                      ],
                      "id": 29985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "478:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 29992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "478:63:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29993,
                  "nodeType": "ExpressionStatement",
                  "src": "478:63:30"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29995,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "561:3:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 29996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "565:6:30",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "561:10:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 29997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "573:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 29994,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        27872,
                        27901
                      ],
                      "referencedDeclaration": 27872,
                      "src": "551:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 29998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "551:24:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29999,
                  "nodeType": "ExpressionStatement",
                  "src": "551:24:30"
                },
                {
                  "expression": {
                    "id": 30005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30000,
                        "name": "AvatarClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29965,
                        "src": "585:13:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 30003,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 30001,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28825,
                          "src": "599:10:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 30002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "599:12:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "585:27:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 30004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "615:4:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "585:34:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30006,
                  "nodeType": "ExpressionStatement",
                  "src": "585:34:30"
                }
              ]
            },
            "functionSelector": "5e5cd13a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAvatar",
            "nameLocation": "446:12:30",
            "parameters": {
              "id": 29983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:2:30"
            },
            "returnParameters": {
              "id": 29984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "468:0:30"
            },
            "scope": 30111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30020,
            "nodeType": "FunctionDefinition",
            "src": "632:133:30",
            "nodes": [],
            "body": {
              "id": 30019,
              "nodeType": "Block",
              "src": "723:42:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30016,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30010,
                        "src": "749:8:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 30015,
                      "name": "_ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27805,
                      "src": "740:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 30017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "740:18:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 30014,
                  "id": 30018,
                  "nodeType": "Return",
                  "src": "733:25:30"
                }
              ]
            },
            "functionSelector": "12ecf0af",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "avatarOwner",
            "nameLocation": "641:11:30",
            "parameters": {
              "id": 30011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30010,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "670:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 30020,
                  "src": "662:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "662:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "652:32:30"
            },
            "returnParameters": {
              "id": 30014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30013,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30020,
                  "src": "714:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30012,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "713:9:30"
            },
            "scope": 30111,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 30047,
            "nodeType": "FunctionDefinition",
            "src": "771:265:30",
            "nodes": [],
            "body": {
              "id": 30046,
              "nodeType": "Block",
              "src": "843:193:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 30042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 30035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30030,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30022,
                            "src": "874:4:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 30033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "890:1:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 30032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "882:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30031,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "882:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "882:10:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "874:18:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 30041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30036,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30024,
                            "src": "896:2:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 30039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "910:1:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 30038,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "902:7:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 30037,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "902:7:30",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "902:10:30",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "896:16:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "874:38:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206120536f756c626f756e6420746f6b656e2e2049742063616e6e6f74206265207472616e736665727265642e2049742063616e206f6e6c79206265206275726e65642062792074686520746f6b656e206f776e65722e",
                        "id": 30043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "926:93:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28801fa3c22906d4dd9bd30ff39b6ebf9147fc5fd5135be5ea0c194e59941ab1",
                          "typeString": "literal_string \"This a Soulbound token. It cannot be transferred. It can only be burned by the token owner.\""
                        },
                        "value": "This a Soulbound token. It cannot be transferred. It can only be burned by the token owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28801fa3c22906d4dd9bd30ff39b6ebf9147fc5fd5135be5ea0c194e59941ab1",
                          "typeString": "literal_string \"This a Soulbound token. It cannot be transferred. It can only be burned by the token owner.\""
                        }
                      ],
                      "id": 30029,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "853:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 30044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "853:176:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30045,
                  "nodeType": "ExpressionStatement",
                  "src": "853:176:30"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferFrom",
            "nameLocation": "780:13:30",
            "parameters": {
              "id": 30027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30022,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "802:4:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 30047,
                  "src": "794:12:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30024,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "816:2:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 30047,
                  "src": "808:10:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30023,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "808:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30026,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30047,
                  "src": "820:7:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "793:35:30"
            },
            "returnParameters": {
              "id": 30028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:30"
            },
            "scope": 30111,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 30061,
            "nodeType": "FunctionDefinition",
            "src": "1042:95:30",
            "nodes": [],
            "body": {
              "id": 30060,
              "nodeType": "Block",
              "src": "1100:37:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30057,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30049,
                        "src": "1122:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 30054,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1110:5:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_Avatar_$30111_$",
                          "typeString": "type(contract super Avatar)"
                        }
                      },
                      "id": 30056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1116:5:30",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28045,
                      "src": "1110:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 30058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:20:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30059,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:20:30"
                }
              ]
            },
            "baseFunctions": [
              28045
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "1051:5:30",
            "overrides": {
              "id": 30052,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 30051,
                  "name": "ERC721",
                  "nameLocations": [
                    "1092:6:30"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28322,
                  "src": "1092:6:30"
                }
              ],
              "src": "1083:16:30"
            },
            "parameters": {
              "id": 30050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30049,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1065:7:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 30061,
                  "src": "1057:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1057:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1056:17:30"
            },
            "returnParameters": {
              "id": 30053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1100:0:30"
            },
            "scope": 30111,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 30069,
            "nodeType": "FunctionDefinition",
            "src": "1143:101:30",
            "nodes": [],
            "body": {
              "id": 30068,
              "nodeType": "Block",
              "src": "1211:33:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30066,
                    "name": "uriPrefix",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29971,
                    "src": "1228:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 30065,
                  "id": 30067,
                  "nodeType": "Return",
                  "src": "1221:16:30"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBaseURI",
            "nameLocation": "1152:10:30",
            "parameters": {
              "id": 30062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:2:30"
            },
            "returnParameters": {
              "id": 30065,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30064,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30069,
                  "src": "1196:13:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30063,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1196:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1195:15:30"
            },
            "scope": 30111,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 30110,
            "nodeType": "FunctionDefinition",
            "src": "1250:582:30",
            "nodes": [],
            "body": {
              "id": 30109,
              "nodeType": "Block",
              "src": "1347:485:30",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30078,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30071,
                            "src": "1386:8:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 30077,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27823,
                          "src": "1378:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 30079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1378:17:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 30080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1409:49:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 30076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1357:7:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 30081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:111:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30082,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:111:30"
                },
                {
                  "assignments": [
                    30084
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30084,
                      "mutability": "mutable",
                      "name": "currentBaseURI",
                      "nameLocation": "1493:14:30",
                      "nodeType": "VariableDeclaration",
                      "scope": 30109,
                      "src": "1479:28:30",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 30083,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1479:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30087,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 30085,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27591,
                      "src": "1510:8:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 30086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1510:10:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1479:41:30"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 30094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30090,
                              "name": "currentBaseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30084,
                              "src": "1555:14:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 30089,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1549:5:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 30088,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1549:5:30",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1549:21:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 30092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1571:6:30",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1549:28:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 30093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1580:1:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1549:32:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 30106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1823:2:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 30107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "1549:276:30",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30099,
                              "name": "currentBaseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30084,
                              "src": "1670:14:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 30100,
                                  "name": "_tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30071,
                                  "src": "1710:8:30",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 30101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1719:8:30",
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30196,
                                "src": "1710:17:30",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 30102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1710:19:30",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 30103,
                              "name": "uriSuffix",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29974,
                              "src": "1755:9:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "expression": {
                              "id": 30097,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1628:3:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 30098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1632:12:30",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1628:16:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 30104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1628:158:30",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 30096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1600:6:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 30095,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1600:6:30",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 30105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1600:204:30",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 30075,
                  "id": 30108,
                  "nodeType": "Return",
                  "src": "1530:295:30"
                }
              ]
            },
            "functionSelector": "3bb3a24d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenURI",
            "nameLocation": "1259:11:30",
            "parameters": {
              "id": 30072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30071,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1288:8:30",
                  "nodeType": "VariableDeclaration",
                  "scope": 30110,
                  "src": "1280:16:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30070,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1280:7:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1270:32:30"
            },
            "returnParameters": {
              "id": 30075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30074,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30110,
                  "src": "1332:13:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30073,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1331:15:30"
            },
            "scope": 30111,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 29957,
              "name": "ERC721",
              "nameLocations": [
                "189:6:30"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28322,
              "src": "189:6:30"
            },
            "id": 29958,
            "nodeType": "InheritanceSpecifier",
            "src": "189:6:30"
          }
        ],
        "canonicalName": "Avatar",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30111,
          28322,
          28483,
          28438,
          29034,
          29046,
          28835
        ],
        "name": "Avatar",
        "nameLocation": "179:6:30",
        "scope": 30112,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 30
}